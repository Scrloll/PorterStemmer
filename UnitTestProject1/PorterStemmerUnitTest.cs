using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using PorterStemmer;

namespace UnitTest
{
    [TestClass]
    public class PorterStemmerUnitTest
    {
        [TestMethod]
        public void EnglishTest()
        {
            Dictionary<string, string> words = new Dictionary<string, string>()
            {
                { "consign",       "consign" }, 
                { "consigned",     "consign" },
                { "consigning",    "consign" },
                { "consignment",   "consign" },
                { "consist",       "consist" },
                { "consisted",     "consist" },
                { "consistency",   "consist" },
                { "consistent",    "consist" },
                { "consistently",  "consist" },
                { "consisting",    "consist" },
                { "consists",      "consist" },
                { "consolation",   "consol" },
                { "consolations",  "consol" },
                { "consolatory",   "consolatori" }, 
                { "console",       "consol" },
                { "consoled",      "consol" },
                { "consoles",      "consol" },
                { "consolidate",   "consolid" },
                { "consolidated",  "consolid" },
                { "consolidating", "consolid" },
                { "consoling",     "consol" },
                { "consolingly",   "consol" },
                { "consols",       "consol" },
                { "consonant",     "conson" },
                { "consort",       "consort" },
                { "consorted",     "consort" },
                { "consorting",    "consort" },
                { "conspicuous",   "conspicu" },
                { "conspicuously", "conspicu" },
                { "conspiracy",    "conspiraci" },
                { "conspirator",   "conspir" },
                { "conspirators",  "conspir" },
                { "conspire",      "conspir" },
                { "conspired",     "conspir" },
                { "conspiring",    "conspir" },
                { "constable",     "constabl" },
                { "constables",    "constabl" },
                { "constance",     "constanc" },
                { "constancy",     "constanc" },
                { "constant",      "constant" },

                { "knack",      "knack" },
                { "knackeries", "knackeri" },
                { "knacks",     "knack" },
                { "knag",       "knag" },
                { "knave",      "knave" },
                { "knaves",     "knave" },
                { "knavish",    "knavish" },
                { "kneaded",    "knead" },
                { "kneading",   "knead" },
                { "knee",       "knee" },
                { "kneel",      "kneel" },
                { "kneeled",    "kneel" },
                { "kneeling",   "kneel" },
                { "kneels",     "kneel" },
                { "knees",      "knee" },
                { "knell",      "knell" },
                { "knelt",      "knelt" },
                { "knew",       "knew" },
                { "knick",      "knick" },
                { "knif",       "knif" },
                { "knife",      "knife" },
                { "knight",     "knight" },
                { "knightly",   "knight" },
                { "knights",    "knight" },
                { "knit",       "knit" },
                { "knits",      "knit" },
                { "knitted",    "knit" },
                { "knitting",   "knit" },
                { "knives",     "knive" },
                { "knob",       "knob" },
                { "knobs",      "knob" },
                { "knock",      "knock" },
                { "knocked",    "knock" },
                { "knocker",    "knocker" },
                { "knockers",   "knocker" },
                { "knocking",   "knock" },
                { "knocks",     "knock" },
                { "knopp",      "knopp" },
                { "knot",       "knot" },
                { "knots",      "knot" }
            };

            foreach (var word in words)
                Assert.AreEqual(word.Key.GetStem(), word.Value);
        }

        [TestMethod]
        public void RussianTest()
        {
            Dictionary<string, string> words = new Dictionary<string, string>()
            {
                { "в",            "в" }, 
                { "вавиловка",    "вавиловк" },
                { "вагнера",      "вагнер" },
                { "вагон",        "вагон" },
                { "вагона",       "вагон" },
                { "вагоне",       "вагон" },
                { "вагонов",      "вагон" },
                { "вагоном",      "вагон" },
                { "вагоны",       "вагон" },
                { "важная",       "важн" },
                { "важнее",       "важн" },
                { "важнейшие",    "важн" },
                { "важнейшими",   "важн" },
                { "важничал",     "важнича" },
                { "важно",        "важн" },
                { "важного",      "важн" },
                { "важное",       "важн" },
                { "важной",       "важн" },
                { "важном",       "важн" },
                { "важному",      "важн" },
                { "важности",     "важност" },
                { "важностию",    "важност" },
                { "важность",     "важност" },
                { "важностью",    "важност" },
                { "важную",       "важн" },
                { "важны",        "важн" },
                { "важные",       "важн" },
                { "важный",       "важн" },
                { "важным",       "важн" },
                { "важных",       "важн" },
                { "вазах",        "ваз" },
                { "вазы",         "ваз" },
                { "вакса",        "вакс" },
                { "вакханка",     "вакханк" },
                { "вал",          "вал" },
                { "валандался",   "валанда" },
                { "валентина",    "валентин" },
                { "валериановых", "валерианов" },
                { "валерию",      "валер" },
                { "валетами",     "валет" },
                { "вали",         "вал" },
                { "валил",        "вал" },
                { "валился",      "вал" },
                { "валится",      "вал" },
                { "валов",        "вал" },
                { "вальдшнепа",   "вальдшнеп" },
                { "вальс",        "вальс" },
                { "вальса",       "вальс" },
                { "вальсе",       "вальс" },
                { "вальсишку",    "вальсишк" },
                { "вальтера",     "вальтер" },
                { "валяется",     "валя" },
                { "валялась",     "валя" },
                { "валялись",     "валя" },
                { "валялось",     "валя" },
                { "валялся",      "валя" },
                { "валять",       "валя" },
                { "валяются",     "валя" },
                { "вам",          "вам" },
                { "вами",         "вам" },

                { "п",          "п" },
                { "па",         "па" },
                { "пава",       "пав" },
                { "павел",      "павел" },
                { "павильон",   "павильон" },
                { "павильонам", "павильон" },
                { "павла",      "павл" },
                { "павлиний",   "павлин" },
                { "павлиньи",   "павлин" },
                { "павлиньим",  "павлин" },
                { "павлович",   "павлович" },
                { "павловна",   "павловн" },
                { "павловне",   "павловн" },
                { "павловной",  "павловн" },
                { "павловну",   "павловн" },
                { "павловны",   "павловн" },
                { "павловцы",   "павловц" },
                { "павлыч",     "павлыч" },
                { "павлыча",    "павлыч" },
                { "пагубная",   "пагубн" },
                { "падает",     "пада" },
                { "падай",      "пада" },
                { "падал",      "пада" },
                { "падала",     "пада" },
                { "падаль",     "падал" },
                { "падать",     "пада" },
                { "падаю",      "пада" },
                { "падают",     "пада" },
                { "падающего",  "пада" },
                { "падающие",   "пада" },
                { "падеж",      "падеж" },
                { "падение",    "паден" },
                { "падением",   "паден" },
                { "падении",    "паден" },
                { "падений",    "паден" },
                { "падения",    "паден" },
                { "паденье",    "паден" },
                { "паденья",    "паден" },
                { "падет",      "падет" },
                { "падут",      "падут" },
                { "падучая",    "падуч" },
                { "падчерицей", "падчериц" },
                { "падчерицы",  "падчериц" },
                { "падшая",     "падш" },
                { "падшей",     "падш" },
                { "падшему",    "падш" },
                { "падший",     "падш" },
                { "падшим",     "падш" },
                { "падших",     "падш" },
                { "падшую",     "падш" },
                { "паек",       "паек" },
                { "пазухи",     "пазух" },
                { "пазуху",     "пазух" },
                { "пай",        "па" },
                { "пакет",      "пакет" },
                { "пакетом",    "пакет" },
                { "пакеты",     "пакет" },
                { "пакостей",   "пакост" },
                { "пакостно",   "пакостн" },
                { "пал",        "пал" }
            };

            foreach (var word in words)
                Assert.AreEqual(word.Value, word.Key.GetStem());
        }
    }
}
